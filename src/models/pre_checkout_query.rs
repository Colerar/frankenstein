/*
 * Telegram Bot API
 *
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PreCheckoutQuery : This object contains information about an incoming pre-checkout query.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PreCheckoutQuery {
    /// Unique query identifier
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "from")]
    pub from: crate::models::User,
    /// Three-letter ISO 4217 [currency](/bots/payments#supported-currencies) code
    #[serde(rename = "currency")]
    pub currency: String,
    /// Total price in the *smallest units* of the currency (integer, **not** float/double). For example, for a price of `US$ 1.45` pass `amount = 145`. See the *exp* parameter in [currencies.json](https://core.telegram.org/bots/payments/currencies.json), it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).
    #[serde(rename = "total_amount")]
    pub total_amount: i32,
    /// Bot specified invoice payload
    #[serde(rename = "invoice_payload")]
    pub invoice_payload: String,
    /// *Optional*. Identifier of the shipping option chosen by the user
    #[serde(rename = "shipping_option_id", skip_serializing_if = "Option::is_none")]
    pub shipping_option_id: Option<String>,
    #[serde(rename = "order_info", skip_serializing_if = "Option::is_none")]
    pub order_info: Option<crate::models::OrderInfo>,
}

impl PreCheckoutQuery {
    /// This object contains information about an incoming pre-checkout query.
    pub fn new(id: String, from: crate::models::User, currency: String, total_amount: i32, invoice_payload: String) -> PreCheckoutQuery {
        PreCheckoutQuery {
            id,
            from,
            currency,
            total_amount,
            invoice_payload,
            shipping_option_id: None,
            order_info: None,
        }
    }
}


