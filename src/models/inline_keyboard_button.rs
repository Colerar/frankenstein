/*
 * Telegram Bot API
 *
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// InlineKeyboardButton : This object represents one button of an inline keyboard. You **must** use exactly one of the optional fields.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InlineKeyboardButton {
    /// Label text on the button
    #[serde(rename = "text")]
    pub text: String,
    /// *Optional*. HTTP or tg:// url to be opened when button is pressed
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "login_url", skip_serializing_if = "Option::is_none")]
    pub login_url: Option<crate::models::LoginUrl>,
    /// *Optional*. Data to be sent in a [callback query](https://core.telegram.org/bots/api/#callbackquery) to the bot when button is pressed, 1-64 bytes
    #[serde(rename = "callback_data", skip_serializing_if = "Option::is_none")]
    pub callback_data: Option<String>,
    /// *Optional*. If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot's username and the specified inline query in the input field. Can be empty, in which case just the bot's username will be inserted.    **Note:** This offers an easy way for users to start using your bot in [inline mode](/bots/inline) when they are currently in a private chat with it. Especially useful when combined with [*switch\\_pm…*](https://core.telegram.org/bots/api/#answerinlinequery) actions – in this case the user will be automatically returned to the chat they switched from, skipping the chat selection screen.
    #[serde(rename = "switch_inline_query", skip_serializing_if = "Option::is_none")]
    pub switch_inline_query: Option<String>,
    /// *Optional*. If set, pressing the button will insert the bot's username and the specified inline query in the current chat's input field. Can be empty, in which case only the bot's username will be inserted.    This offers a quick way for the user to open your bot in inline mode in the same chat – good for selecting something from multiple options.
    #[serde(rename = "switch_inline_query_current_chat", skip_serializing_if = "Option::is_none")]
    pub switch_inline_query_current_chat: Option<String>,
    /// A placeholder, currently holds no information. Use [BotFather](https://t.me/botfather) to set up your game.
    #[serde(rename = "callback_game", skip_serializing_if = "Option::is_none")]
    pub callback_game: Option<serde_json::Value>,
    /// *Optional*. Specify True, to send a [Pay button](https://core.telegram.org/bots/api/#payments).    **NOTE:** This type of button **must** always be the first button in the first row.
    #[serde(rename = "pay", skip_serializing_if = "Option::is_none")]
    pub pay: Option<bool>,
}

impl InlineKeyboardButton {
    /// This object represents one button of an inline keyboard. You **must** use exactly one of the optional fields.
    pub fn new(text: String) -> InlineKeyboardButton {
        InlineKeyboardButton {
            text,
            url: None,
            login_url: None,
            callback_data: None,
            switch_inline_query: None,
            switch_inline_query_current_chat: None,
            callback_game: None,
            pay: None,
        }
    }
}


