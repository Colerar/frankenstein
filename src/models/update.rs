/*
 * Telegram Bot API
 *
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Update : This [object](https://core.telegram.org/bots/api/#available-types) represents an incoming update.   At most **one** of the optional parameters can be present in any given update.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Update {
    /// The update's unique identifier. Update identifiers start from a certain positive number and increase sequentially. This ID becomes especially handy if you're using [Webhooks](https://core.telegram.org/bots/api/#setwebhook), since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order. If there are no new updates for at least a week, then identifier of the next update will be chosen randomly instead of sequentially.
    #[serde(rename = "update_id")]
    pub update_id: i32,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<crate::models::Message>,
    #[serde(rename = "edited_message", skip_serializing_if = "Option::is_none")]
    pub edited_message: Option<crate::models::Message>,
    #[serde(rename = "channel_post", skip_serializing_if = "Option::is_none")]
    pub channel_post: Option<crate::models::Message>,
    #[serde(rename = "edited_channel_post", skip_serializing_if = "Option::is_none")]
    pub edited_channel_post: Option<crate::models::Message>,
    #[serde(rename = "inline_query", skip_serializing_if = "Option::is_none")]
    pub inline_query: Option<crate::models::InlineQuery>,
    #[serde(rename = "chosen_inline_result", skip_serializing_if = "Option::is_none")]
    pub chosen_inline_result: Option<crate::models::ChosenInlineResult>,
    #[serde(rename = "callback_query", skip_serializing_if = "Option::is_none")]
    pub callback_query: Option<crate::models::CallbackQuery>,
    #[serde(rename = "shipping_query", skip_serializing_if = "Option::is_none")]
    pub shipping_query: Option<crate::models::ShippingQuery>,
    #[serde(rename = "pre_checkout_query", skip_serializing_if = "Option::is_none")]
    pub pre_checkout_query: Option<crate::models::PreCheckoutQuery>,
    #[serde(rename = "poll", skip_serializing_if = "Option::is_none")]
    pub poll: Option<crate::models::Poll>,
    #[serde(rename = "poll_answer", skip_serializing_if = "Option::is_none")]
    pub poll_answer: Option<crate::models::PollAnswer>,
    #[serde(rename = "my_chat_member", skip_serializing_if = "Option::is_none")]
    pub my_chat_member: Option<crate::models::ChatMemberUpdated>,
    #[serde(rename = "chat_member", skip_serializing_if = "Option::is_none")]
    pub chat_member: Option<crate::models::ChatMemberUpdated>,
}

impl Update {
    /// This [object](https://core.telegram.org/bots/api/#available-types) represents an incoming update.   At most **one** of the optional parameters can be present in any given update.
    pub fn new(update_id: i32) -> Update {
        Update {
            update_id,
            message: None,
            edited_message: None,
            channel_post: None,
            edited_channel_post: None,
            inline_query: None,
            chosen_inline_result: None,
            callback_query: None,
            shipping_query: None,
            pre_checkout_query: None,
            poll: None,
            poll_answer: None,
            my_chat_member: None,
            chat_member: None,
        }
    }
}


