/*
 * Telegram Bot API
 *
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InlineObject70 {
    /// User identifier
    #[serde(rename = "user_id")]
    pub user_id: i32,
    /// New score, must be non-negative
    #[serde(rename = "score")]
    pub score: i32,
    /// Pass True, if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters
    #[serde(rename = "force", skip_serializing_if = "Option::is_none")]
    pub force: Option<bool>,
    /// Pass True, if the game message should not be automatically edited to include the current scoreboard
    #[serde(rename = "disable_edit_message", skip_serializing_if = "Option::is_none")]
    pub disable_edit_message: Option<bool>,
    /// Required if *inline\\_message\\_id* is not specified. Unique identifier for the target chat
    #[serde(rename = "chat_id", skip_serializing_if = "Option::is_none")]
    pub chat_id: Option<i32>,
    /// Required if *inline\\_message\\_id* is not specified. Identifier of the sent message
    #[serde(rename = "message_id", skip_serializing_if = "Option::is_none")]
    pub message_id: Option<i32>,
    /// Required if *chat\\_id* and *message\\_id* are not specified. Identifier of the inline message
    #[serde(rename = "inline_message_id", skip_serializing_if = "Option::is_none")]
    pub inline_message_id: Option<String>,
}

impl InlineObject70 {
    pub fn new(user_id: i32, score: i32) -> InlineObject70 {
        InlineObject70 {
            user_id,
            score,
            force: None,
            disable_edit_message: None,
            chat_id: None,
            message_id: None,
            inline_message_id: None,
        }
    }
}


