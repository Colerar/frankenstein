/*
 * Telegram Bot API
 *
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Contact : This object represents a phone contact.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Contact {
    /// Contact's phone number
    #[serde(rename = "phone_number")]
    pub phone_number: String,
    /// Contact's first name
    #[serde(rename = "first_name")]
    pub first_name: String,
    /// *Optional*. Contact's last name
    #[serde(rename = "last_name", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    /// *Optional*. Contact's user identifier in Telegram. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<i32>,
    /// *Optional*. Additional data about the contact in the form of a [vCard](https://en.wikipedia.org/wiki/VCard)
    #[serde(rename = "vcard", skip_serializing_if = "Option::is_none")]
    pub vcard: Option<String>,
}

impl Contact {
    /// This object represents a phone contact.
    pub fn new(phone_number: String, first_name: String) -> Contact {
        Contact {
            phone_number,
            first_name,
            last_name: None,
            user_id: None,
            vcard: None,
        }
    }
}


