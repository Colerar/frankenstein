/*
 * Telegram Bot API
 *
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Venue : This object represents a venue.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Venue {
    #[serde(rename = "location")]
    pub location: crate::models::Location,
    /// Name of the venue
    #[serde(rename = "title")]
    pub title: String,
    /// Address of the venue
    #[serde(rename = "address")]
    pub address: String,
    /// *Optional*. Foursquare identifier of the venue
    #[serde(rename = "foursquare_id", skip_serializing_if = "Option::is_none")]
    pub foursquare_id: Option<String>,
    /// *Optional*. Foursquare type of the venue. (For example, “arts\\_entertainment/default”, “arts\\_entertainment/aquarium” or “food/icecream”.)
    #[serde(rename = "foursquare_type", skip_serializing_if = "Option::is_none")]
    pub foursquare_type: Option<String>,
    /// *Optional*. Google Places identifier of the venue
    #[serde(rename = "google_place_id", skip_serializing_if = "Option::is_none")]
    pub google_place_id: Option<String>,
    /// *Optional*. Google Places type of the venue. (See [supported types](https://developers.google.com/places/web-service/supported_types).)
    #[serde(rename = "google_place_type", skip_serializing_if = "Option::is_none")]
    pub google_place_type: Option<String>,
}

impl Venue {
    /// This object represents a venue.
    pub fn new(location: crate::models::Location, title: String, address: String) -> Venue {
        Venue {
            location,
            title,
            address,
            foursquare_id: None,
            foursquare_type: None,
            google_place_id: None,
            google_place_type: None,
        }
    }
}


