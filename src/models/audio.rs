/*
 * Telegram Bot API
 *
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Audio : This object represents an audio file to be treated as music by the Telegram clients.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Audio {
    /// Identifier for this file, which can be used to download or reuse the file
    #[serde(rename = "file_id")]
    pub file_id: String,
    /// Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.
    #[serde(rename = "file_unique_id")]
    pub file_unique_id: String,
    /// Duration of the audio in seconds as defined by sender
    #[serde(rename = "duration")]
    pub duration: i32,
    /// *Optional*. Performer of the audio as defined by sender or by audio tags
    #[serde(rename = "performer", skip_serializing_if = "Option::is_none")]
    pub performer: Option<String>,
    /// *Optional*. Title of the audio as defined by sender or by audio tags
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// *Optional*. Original filename as defined by sender
    #[serde(rename = "file_name", skip_serializing_if = "Option::is_none")]
    pub file_name: Option<String>,
    /// *Optional*. MIME type of the file as defined by sender
    #[serde(rename = "mime_type", skip_serializing_if = "Option::is_none")]
    pub mime_type: Option<String>,
    /// *Optional*. File size
    #[serde(rename = "file_size", skip_serializing_if = "Option::is_none")]
    pub file_size: Option<i32>,
    #[serde(rename = "thumb", skip_serializing_if = "Option::is_none")]
    pub thumb: Option<crate::models::PhotoSize>,
}

impl Audio {
    /// This object represents an audio file to be treated as music by the Telegram clients.
    pub fn new(file_id: String, file_unique_id: String, duration: i32) -> Audio {
        Audio {
            file_id,
            file_unique_id,
            duration,
            performer: None,
            title: None,
            file_name: None,
            mime_type: None,
            file_size: None,
            thumb: None,
        }
    }
}


