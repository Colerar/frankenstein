/*
 * Telegram Bot API
 *
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// StickerSet : This object represents a sticker set.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct StickerSet {
    /// Sticker set name
    #[serde(rename = "name")]
    pub name: String,
    /// Sticker set title
    #[serde(rename = "title")]
    pub title: String,
    /// *True*, if the sticker set contains [animated stickers](https://telegram.org/blog/animated-stickers)
    #[serde(rename = "is_animated")]
    pub is_animated: bool,
    /// *True*, if the sticker set contains masks
    #[serde(rename = "contains_masks")]
    pub contains_masks: bool,
    /// List of all set stickers
    #[serde(rename = "stickers")]
    pub stickers: Vec<crate::models::Sticker>,
    #[serde(rename = "thumb", skip_serializing_if = "Option::is_none")]
    pub thumb: Option<crate::models::PhotoSize>,
}

impl StickerSet {
    /// This object represents a sticker set.
    pub fn new(name: String, title: String, is_animated: bool, contains_masks: bool, stickers: Vec<crate::models::Sticker>) -> StickerSet {
        StickerSet {
            name,
            title,
            is_animated,
            contains_masks,
            stickers,
            thumb: None,
        }
    }
}


